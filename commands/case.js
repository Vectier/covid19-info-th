const cases = require('../utils/cases')
const line = require('../utils/line')

const numberWithCommas = (number) => {
  return parseInt(number).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
}

exports.request = async (replyToken) => {
  const theCase = await cases.getLatestCase()

  const [year, month, day] = theCase.date.split('-')
  const date = new Date(year, month, day)
  const thaiFormattedDate = date.toLocaleDateString('th-TH', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  })

  const message = [
    `‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÇ‡∏Ñ‡∏ß‡∏¥‡∏î-19\n‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${thaiFormattedDate}`,
    `‡∏ï‡∏£‡∏ß‡∏à‡πÉ‡∏´‡∏°‡πà: ${numberWithCommas(theCase.tested)} ‡∏Ñ‡∏ô`,
    `‡∏ï‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà: ${numberWithCommas(theCase.cases)} ‡∏Ñ‡∏ô`,
    `‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÄ‡∏û‡∏¥‡πà‡∏°: ${numberWithCommas(theCase.deaths)} ‡∏Ñ‡∏ô`,
    `üè• ‡∏¢‡∏±‡∏á‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏≠‡∏¢‡∏π‡πà: ${numberWithCommas(theCase.hospitalized)} ‡∏Ñ‡∏ô\nüè† ‡∏´‡∏≤‡∏¢‡∏õ‡πà‡∏ß‡∏¢‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô: ${numberWithCommas(theCase.recovered)} ‡∏Ñ‡∏ô`,
  ].join('\n\n')

  return line.client.replyMessage(replyToken, { type: 'text', text: message })
}